// Symbol.iterator

let range = {
  from: 1,
  to: 5,
};
// –ú—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª for..of:
// for(let num of range) ... num=1,2,3,4,5

//
let range = {
  from: 1,
  to: 5,
};
// 1. –≤—ã–∑–æ–≤ for..of —Å–Ω–∞—á–∞–ª–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é
range[Symbol.iterator] = function () {
  // ...–æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞:
  // 2. –î–∞–ª–µ–µ, for..of —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —ç—Ç–∏–º –∏—Ç–µ—Ä–∞—Ç–æ—Ä–æ–º, –∑–∞–ø—Ä–∞—à–∏–≤–∞—è —É –Ω–µ–≥–æ –Ω–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  return {
    current: this.from,
    last: this.to,
    // 3. next() –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ for..of
    next() {
      // 4. –æ–Ω –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ {done:.., value :...}
      if (this.current <= this.last) {
        return { done: false, value: this.current++ };
      } else {
        return { done: true };
      }
    },
  };
};
// —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç!
for (let num of range) {
  alert(num); // 1, –∑–∞—Ç–µ–º 2, 3, 4, 5
}

//–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –º—ã –º–æ–∂–µ–º –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å –∏—Ö –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∞–º range –∫–∞–∫ –∏—Ç–µ—Ä–∞—Ç–æ—Ä, —á—Ç–æ–±—ã  —É–ø—Ä–æ—Å—Ç–∏—Ç—å –∫–æ–¥:
let range = {
  from: 1,
  to: 5,
  [Symbol.iterator]() {
    this.current = this.from;
    return this;
  },
  next() {
    if (this.current <= this.to) {
      return { done: false, value: this.current++ };
    } else {
      return { done: true };
    }
  },
};
for (let num of range) {
  alert(num); // 1, –∑–∞—Ç–µ–º 2, 3, 4, 5
}

//–°—Ç—Ä–æ–∫–∞ ‚Äì –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º—ã–π –æ–±—ä–µ–∫—Ç
for (let char of "test") {
  // —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç 4 —Ä–∞–∑–∞: –ø–æ –æ–¥–Ω–æ–º—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞
  alert(char); // t, –∑–∞—Ç–µ–º e, –∑–∞—Ç–µ–º s, –∑–∞—Ç–µ–º t
}

// –ò –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–∞–∂–µ —Å —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏
let str = "ùí≥üòÇ";
for (let char of str) {
  alert(char); // ùí≥, –∞ –∑–∞—Ç–µ–º üòÇ
}

// –Ø–≤–Ω—ã–π –≤—ã–∑–æ–≤ –∏—Ç–µ—Ä–∞—Ç–æ—Ä–∞
let str = "Hello";
// –¥–µ–ª–∞–µ—Ç —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏
// for (let char of str) alert(char);
let iterator = str[Symbol.iterator]();
while (true) {
  let result = iterator.next();
  if (result.done) break;
  alert(result.value); // –≤—ã–≤–æ–¥–∏—Ç —Å–∏–º–≤–æ–ª—ã –æ–¥–∏–Ω –∑–∞ –¥—Ä—É–≥–∏–º
}

// –ò—Ç–µ—Ä–∏—Ä—É–µ–º—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤—ã
/*
- –æ–±—ä–µ–∫—Ç—ã ‚Äì —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª–∏–∑—É—é—Ç –º–µ—Ç–æ–¥ Symbol.iterator ,
–∫–∞–∫ –±—ã–ª–æ –æ–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ.
-  –ü—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤—ã ‚Äì —ç—Ç–æ –æ–±—ä–µ–∫—Ç—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∏–Ω–¥–µ–∫—Å—ã –∏ —Å–≤–æ–π—Å—Ç–≤–æ length , —Ç–æ –µ—Å—Ç—å, –æ–Ω–∏
–≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –º–∞—Å—Å–∏–≤—ã. */

let arrayLike = {
  // –µ—Å—Ç—å –∏–Ω–¥–µ–∫—Å—ã –∏ —Å–≤–æ–π—Å—Ç–≤–æ length => –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤
  0: "Hello",
  1: "World",
  length: 2,
};
// –û—à–∏–±–∫–∞ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Symbol.iterator)
for (let item of arrayLike) {
}

//Array.from
let arrayLike = {
  0: "Hello",
  1: "World",
  length: 2,
};
let arr = Array.from(arrayLike); // (*)
alert(arr.pop()); // World (–º–µ—Ç–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç)
/*Array.from –≤ —Å—Ç—Ä–æ–∫–µ (*) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º
–æ–±—ä–µ–∫—Ç–æ–º –∏–ª–∏ –ø—Å–µ–≤–¥–æ–º–∞—Å—Å–∏–≤–æ–º, –∑–∞—Ç–µ–º —Å–æ–∑–¥–∞—ë—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ –∫–æ–ø–∏—Ä—É–µ—Ç —Ç—É–¥–∞ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã.
*/

// –¢–æ –∂–µ —Å–∞–º–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º –æ–±—ä–µ–∫—Ç–æ–º:
// range –≤–∑—è—Ç –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –≤—ã—à–µ
let arr = Array.from(range);
alert(arr); // 1,2,3,4,5 (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —á–µ—Ä–µ–∑ toString —Ä–∞–±–æ—Ç–∞–µ—Ç)

// –ü–æ–ª–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Array.from:
// Array.from(obj[, mapFn, thisArg])

// range –≤–∑—è—Ç –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –≤—ã—à–µ
// –≤–æ–∑–≤–æ–¥–∏–º –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –≤ –∫–≤–∞–¥—Ä–∞—Ç
let arr = Array.from(range, (num) => num * num);
alert(arr); // 1,4,9,16,25

//
let str = "ùí≥üòÇ";
// —Ä–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ –µ—ë —ç–ª–µ–º–µ–Ω—Ç–æ–≤
let chars = Array.from(str);
alert(chars[0]); // ùí≥
alert(chars[1]); // üòÇ
alert(chars.length); // 2

//SAME AS ABOVE:
let str = "ùí≥üòÇ";
let chars = []; // Array.from –≤–Ω—É—Ç—Ä–∏ —Å–µ–±—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ç–æ—Ç –∂–µ —Ü–∏–∫–ª
for (let char of str) {
  chars.push(char);
}
alert(chars);

//
function slice(str, start, end) {
  return Array.from(str).slice(start, end).join("");
}
let str = "ùí≥üòÇ©∑∂";
alert(slice(str, 1, 3)); // üòÇ©∑∂
// –∞ –≤–æ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã–µ –ø–∞—Ä—ã
alert(str.slice(1, 3)); // –º—É—Å–æ—Ä (–¥–≤–µ —á–∞—Å—Ç–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω—ã—Ö –ø–∞—Ä)
